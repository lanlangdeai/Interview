网站常见问题

1.对于大流量的网站，采用什么样的方法来解决访问量问题？

	首先，确认服务器硬件是否足够支持当前的流量
	其次，优化数据库访问。
	第三，禁止外部的盗链。
	第四，控制大文件的下载。
	第五，使用不同主机分流主要流量
	第六，使用流量分析统计软件
	第七，尽量使用静态页，缓存

2.SESSION 与 COOKIE的区别是什么？

	1)SESSION存储在服务器端，COOKIE保存在客户端。
	2)cookie的存储限制了数据量，只允许4KB，而session是无限量的
	3)Session比较安全，cookie用某些手段可以修改，不安全。
	4)Session依赖于cookie进行传递。禁用cookie后，session还可以使用，在存储session的文件中，生成sessionID，通过get传参的方式将sessionID传到要实现session共享的页面，读取sessionID,从而从session中获取数据。
	5)如果我们需要经常登录一个站点时，最好用cookie来保存信息，要不然每次登陆都特别麻烦，如果对于需要安全性高的站点以及控制数据的能力时需要用会话效果更佳

3.表单中get和post提交方式的区别

	get是显式的，数据从url中可以看到，传输的数据量小(有长度限制)，安全性低

	post是隐式的，传送的数据量较大，放置在body中，安全性较高

	GET请求的参数只能是ASCII码，所以中文需要URL编码，而POST请求传参没有这个限制(支持多种编码)
	get请求参数会被完整保留在浏览历史记录里，而post中的参数不会被保留。

4.tcp的三次握手与四次挥手

	第一次握手：建立连接时，客户端发送syn包（syn=j）到服务器，并进入SYN_SENT状态，等待服务器确认；
	SYN：同步序列编号（Synchronize Sequence Numbers）。

	第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；

	第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。

5.为什么连接的时候是三次握手，关闭的时候却是四次握手？

答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，"你发的FIN报文我收到了"。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。

6.优化数据库的方法

	选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置NOTNULL

	使用连接(JOIN)来代替子查询

	适用联合(UNION)来代替手动创建的临时表

	事务处理

	锁定表、优化事务处理

	使用外键，优化锁定表

	使用索引

	优化查询语句

7.语句include和require的区别是什么？语句include和require的区别是什么？

	require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行

	include有返回值，而require没有(可能因为如此require的速度比include快)如果被包含的文件不存在的化，那么会提示一个错误，但是程序会继续执行下去

8.redis和memcacahe、mongoDB的区别？

都是非关系型数据库，性能都非常高，但是mongoDB和memcache、redis是不同的两种类型。后两者主要用于数据的缓存，前者主要用在查询和储存大数据方面，是最接近数据库的文档型的非关系数据库。

从数据存储位置上来分，memcache的数据存在内存中，而redis既可以存储在内存中，也可以存储的到磁盘中，达到持久化存储的功能，memcache一旦断电，数据全部丢失，redis可以利用快照和AOF把数据存到磁盘中，当恢复时又从磁盘中读取到内存中，当物理内存使用完毕后，可以把数据写入到磁盘中。

从存储数据的类型上来分，memcache和redis存储的方式都是键值对，只不过redis值的类型比较丰富，有string(字符串),hash(哈希)，list(列表),set(集合)zset(有序集合)，而memcache主要存储的是字符串。

9.PHP的基本变量类型

四种标量类型：boolean （布尔型）、integer （整型）、float （浮点型, 也称作 double)、string （字符串）

两种复合类型：array （数组）、object （对象）

两种特殊类型：resource（资源）、NULL（NULL）

10.静态化如何实现的？伪静态如何实现？

	1、 静态化指的是页面静态化，也即生成实实在在的静态文件，也即不需要查询数据库就可以直接从文件中获取数据，指的是真静态。
	实现方式主要有两种：

		一种是我们在添加信息入库的时候就生成的静态文件，也称为模板替换技术。

		一种是用户在访问我们的页面时先判断是否有对应的缓存文件存在，如果存在就读缓存，不存在就读数据库，同时生成缓存文件。

	2、伪静态不是真正意义上的静态化，之所以使用伪静态，主要是为了SEO推广，搜索引擎对动态的文件获取难度大，不利于网站的推广。实习原理是基于Apache或Nginx的rewrite机智
	主要有两种方式：

		一种是直接在配置虚拟机的位置配置伪静态，这个每次修改完成后需要重启web服务器。

		另一种采用分布式的，可以在网站的根目录上创建.htaccess的文件，在里面配置相应的重写规则来实现伪静态，这种每次重写时不需要重启web服务器，且结构上比较清晰。

	PHP静态化分为：纯静态化 和 伪静态化；纯静态化又分为：局部静态化 和 完全静态化

	纯静态化：是把PHP生成的动态页面保存成静态的html文件，用户访问该静态页面，而不是用户每一次访问都重新生成一张相同的网页，优点就是减小服务器开销，

　　局部静态化：是生成的静态文件中，有局部的数据还是通过ajax技术动态获取的；

　　完全静态化：即不存在动态获取数据的情况，所以内容都来自静态的html页面

	伪静态化：其实还是动态访问，其实质是动态生成数据，你访问的网址类似于"http://yourhost,com/index/post/12",是一个静态地址，该地址多见于博客地址，但伪静态化中，你访问的网址实际上经过服务器解析，还是会解析成类似于"http://yourhost,com/?c=index&a=post&id=12"的地址，所以称之为伪静态化

　　伪静态的优点：美观；便于搜索引擎收录

	伪静态实现:
		httpd.conf
		#注释：去掉前边的" # "开启rewrite服务，重启服务器生效
		#LoadModule rewrite_module modules/mod_rewrite.so

		#注释：http-vhosts.conf文件是虚拟域名配置的文件，开启改文件可以配置虚拟域名，一般默认是开启的
		#Include conf/extra/httpd-vhosts.conf

		<VirtualHost *:80>
		    ServerAdmin webmaster@dummy-host.example.com
		    DocumentRoot "c:/Apache24/docs/dummy-host.example.com"
		    ServerName dummy-host.example.com
		    ServerAlias www.dummy-host.example.com
		    ErrorLog "logs/dummy-host.example.com-error.log"
		    CustomLog "logs/dummy-host.example.com-access.log" common


		    #配置规则如下所示
		    RewriteEngine on
		    RewriteRule ^/vidio/([0-9]*).html$ /vidio.php?id=$1
		    
		</VirtualHost> 